fragment UserModelFields on UserModel {
  id
  username
  name
  lastName
  image
  email
  encodedPermissions
  lastOnlineAt
  createdAt
}

mutation Login(
  $username: String!
  $password: String!
) {
  login(username: $username, password: $password) {
    accessToken
    refreshToken
  }
}

mutation Activate($username: String! $code: String!) {
  activate(username: $username, code: $code)
}

mutation Signup(
  $username: String!
  $password: String!
  $email: String!
  $name: String!
) {
  signup(username: $username, password: $password, email: $email, name: $name)
}

mutation Refresh(
  $refreshToken: String!
) {
  refresh(token: $refreshToken) {
    accessToken
    refreshToken
  }
}

mutation EditUser(
  $input: UserModelInput!
) {
  edit(user: $input) {
    id
  }
}

mutation EditMe(
  $name: String!
  $lastName: String
  $image: String
) {
  edit(user: {
    name: $name
    lastName: $lastName
    image: $image
  }) {
    name
    lastName
    image
  }
}

mutation ChangePassword(
  $oldPassword: String!
  $newPassword: String!
) {
  changePassword(oldPassword: $oldPassword, newPassword: $newPassword)
}

mutation ResetPassword(
  $id: String!
) {
  resetPassword(id: $id)
}

mutation DeleteAccount(
  $id: String!
) {
  deleteAccount(id: $id)
}

query GetUsers(
  $username: String
  $offset: Int!
  $limit: Int!
) {
  users(username: $username, offset: $offset, limit: $limit) {
    total
    users {
      ...UserModelFields
    }
  }
}

query Stats {
  totalUsers
  activeUsers
  recentlyCreatedUsers
}

query Me {
  me {
    ...UserModelFields
  }
}

query ImageUpload($contentType: String!) {
  getImageUploadUrl(contentType: $contentType) {
    filename
    url
  }
}
